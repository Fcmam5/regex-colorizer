{"version":3,"sources":["../../webpack/universalModuleDefinition","../../webpack/bootstrap","regex.js","index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","RegexColorizer","self","regexToken","charClassToken","charClassParts","quantifier","type","NONE","RANGE_HYPHEN","SHORT_CLASS","ALTERNATOR","error","UNCLOSED_CLASS","INCOMPLETE_TOKEN","INVALID_RANGE","INVALID_GROUP_TYPE","UNBALANCED_LEFT_PAREN","UNBALANCED_RIGHT_PAREN","INTERVAL_OVERFLOW","INTERVAL_REVERSED","UNQUANTIFIABLE","IMPROPER_EMPTY_ALTERNATIVE","errorize","str","desc","groupize","depth","expandHtmlEntities","replace","getTokenCharCode","token","length","charAt","slice","test","indexOf","toUpperCase","parseInt","NaN","charCodeAt","parseCharClass","match","output","parts","exec","lastToken","rangeable","opening","content","closing","charCode","lastIndex","nextToken","nextTokenCharCode","isNaN","colorizeText","pattern","char0","char1","capturingGroupCount","groupStyleDepth","openGroups","quantifiable","push","index","style","pop","nonBackrefDigits","num","Math","floor","interval","errorIndex","numCharsAdded","colorizeAll","cls","el","els","document","getElementsByClassName","body","getElementsByTagName","regex","RegExp","result","len","className","elsByClass","innerHTML","textContent","innerText","addStyleSheet","ss","createElement","rules","id","appendChild","styleSheet","cssText","RegexColorize"],"mappings":";;;;;;;;;;;CAAA,SAA2CA,EAAMC,GAC1B,kBAAZC,SAA0C,kBAAXC,OACxCA,OAAOD,QAAUD,IACQ,oBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,gBAAiB,GAAIH,GACF,kBAAZC,QACdA,QAAuB,cAAID,IAE3BD,EAAoB,cAAIC,IAR1B,CASGK,OAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,oBAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,qBAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,oBAAoBM,EAAIF,EAGxBJ,oBAAoBO,EAAIR,EAGxBC,oBAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,oBAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,oBAAoBgB,EAAI,SAAStB,GACX,qBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,oBAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,oBAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,oBAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,oBAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,oBAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,oBAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,oBAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,oBAAoBgC,EAAI,GAIjBhC,oBAAoBA,oBAAoBiC,EAAI,G,sEC5ErD,IAugBeC,EAvgBO,WAOlB,IAAIC,EAAO,GACPC,EAAa,kNACbC,EAAiB,iGACjBC,EAAiB,2CACjBC,EAAa,wCACbC,EAAO,CACHC,KAAM,EACNC,aAAc,EACdC,YAAa,EACbC,WAAY,GAEhBC,EAAQ,CACJC,eAAgB,2BAChBC,iBAAkB,yBAClBC,cAAe,4BACfC,mBAAoB,oCACpBC,sBAAuB,oBACvBC,uBAAwB,kCACxBC,kBAAmB,mDACnBC,kBAAmB,wCACnBC,eAAgB,+DAChBC,2BAA4B,0DAcpC,SAASC,SAASC,EAAKC,GACnB,MAAO,kBAAoBA,EAAO,WAAaA,EAAO,IAAM,IAAM,IAAMD,EAAM,OAUlF,SAASE,SAASF,EAAKG,GACnB,MAAO,cAAgBA,EAAQ,KAAOH,EAAM,OAShD,SAASI,mBAAmBJ,GACxB,OAAOA,EAAIK,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAiC1E,SAASC,iBAAiBC,GAEtB,GAAIA,EAAMC,OAAS,GAAyB,OAApBD,EAAME,OAAO,GAAa,CAC9C,IAAI9C,EAAI4C,EAAMG,MAAM,GAEpB,GAAI,cAAcC,KAAKhD,GACnB,MAAO,6BAA6BiD,QAAQjD,EAAE8C,OAAO,GAAGI,eAAiB,EAG7E,GAAI,wCAAwCF,KAAKhD,GAC7C,OAAOmD,SAASnD,EAAE+C,MAAM,GAAI,IAGhC,GAAI,oCAAoCC,KAAKhD,GACzC,OAAOmD,SAASnD,EAAG,GAGvB,GAAiB,IAAbA,EAAE6C,QAAgB,YAAYI,QAAQjD,IAAM,EAC5C,OAAOoD,IAGX,GAAiB,IAAbpD,EAAE6C,OACF,OAAQ7C,GACJ,IAAK,IAAK,OAAO,EACjB,IAAK,IAAK,OAAO,GACjB,IAAK,IAAK,OAAO,GACjB,IAAK,IAAK,OAAO,GACjB,IAAK,IAAK,OAAO,EACjB,IAAK,IAAK,OAAO,GACjB,QAAU,OAAOA,EAAEqD,WAAW,IAK1C,MAAc,OAAVT,EACOA,EAAMS,WAAW,GAErBD,IAWX,SAASE,eAAevD,GACpB,IAMIwD,EAAOrE,EANPsE,EAAS,GACTC,EAAQvC,EAAewC,KAAK3D,GAC5B4D,EAAY,CACRC,WAAW,EACXxC,KAAMA,EAAKC,MAYnB,IAHAmC,IANAC,EAAQ,CACJI,QAASJ,EAAM,GACfK,QAASL,EAAM,GACfM,QAASN,EAAM,KAGHM,QAAUN,EAAMI,QAAUzB,SAASqB,EAAMI,QAASpC,EAAMC,gBAGjE6B,EAAQtC,EAAeyC,KAAKD,EAAMK,UAGrC,GAAoB,QAFpB5E,EAAIqE,EAAM,IAEJT,OAAO,GAYL,YAAYE,KAAK9D,IACjBsE,GAAUpB,SAASlD,EAAGuC,EAAME,kBAC5BgC,EAAY,CAACC,UAAWD,EAAUvC,OAASA,EAAKE,eAEzC,aAAa0B,KAAK9D,IACzBsE,GAAU,MAAQtE,EAAI,OAMtByE,EAAY,CACRC,UAAWD,EAAUvC,OAASA,EAAKE,aACnCF,KAAMA,EAAKG,cAGF,OAANrC,EACPsE,GAAUpB,SAASlD,EAAGuC,EAAME,mBAI5B6B,GAAU,MAAQf,mBAAmBvD,GAAK,OAC1CyE,EAAY,CACRC,UAAWD,EAAUvC,OAASA,EAAKE,aACnC0C,SAAUrB,iBAAiBzD,UAIhC,GAAU,MAANA,EACP,GAAIyE,EAAUC,UAAW,CAErB,IAAIK,EAAYhD,EAAegD,UAC3BC,EAAYjD,EAAeyC,KAAKD,EAAMK,SAE1C,GAAII,EAAW,CACX,IAAIC,EAAoBxB,iBAAiBuB,EAAU,KAG7CE,MAAMD,IAAsBR,EAAUK,SAAWG,GACnDR,EAAUvC,OAASA,EAAKG,aACxB,aAAayB,KAAKkB,EAAU,IAE5BV,GAAUpB,SAAS,IAAKX,EAAMG,eAG9B4B,GAAU,WAEdG,EAAY,CACRC,WAAW,EACXxC,KAAMA,EAAKE,mBAIXmC,EAAMM,QACNP,GAAU,IAGVA,GAAU,WAKlBvC,EAAegD,UAAYA,OAG3BT,GAAU,IACVG,EAAY,CAACC,UAAWD,EAAUvC,OAASA,EAAKE,mBAIpDkC,GAAUf,mBAAmBvD,GAC7ByE,EAAY,CACRC,UAAY1E,EAAE2D,OAAS,GAAKc,EAAUvC,OAASA,EAAKE,aACpD0C,SAAU9E,EAAEmE,WAAWnE,EAAE2D,OAAS,IAK9C,OAAOW,EAASC,EAAMM,QAoQ1B,OApPAhD,EAAKsD,aAAe,SAAUC,GAW1B,IAVA,IAQIf,EAAOrE,EAAGqF,EAAOC,EARjBhB,EAAS,GACTiB,EAAsB,EACtBC,EAAkB,EAClBC,EAAa,GACbhB,EAAY,CACRiB,cAAc,EACdxD,KAAMA,EAAKC,MAIZkC,EAAQvC,EAAW0C,KAAKY,IAK3B,GAHAC,GADArF,EAAIqE,EAAM,IACAT,OAAO,GACjB0B,EAAQtF,EAAE4D,OAAO,GAEH,MAAVyB,EACAf,GAAU,MAAQF,eAAepE,GAAK,OACtCyE,EAAY,CAACiB,cAAc,QAExB,GAAc,MAAVL,EAGU,IAAbrF,EAAE2D,OACFW,GAAUpB,SAASlD,EAAGuC,EAAMI,qBAEX,IAAb3C,EAAE2D,QACF4B,IAEJC,EAAsC,IAApBA,EAAwB,EAAIA,EAAkB,EAMhEC,EAAWE,KAAK,CACZC,MAAOtB,EAAOX,OAAS,iBAAiBA,OACxCgB,QAAS3E,IAGbsE,GAAUjB,SAASrD,EAAGwF,IAE1Bf,EAAY,CAACiB,cAAc,QAExB,GAAc,MAAVL,EAEFI,EAAW9B,QAIZW,GAAUjB,SAAS,IAAKmC,GAMxBf,EAAY,CACRiB,cAAe,QAAQ5B,KAAK2B,EAAWA,EAAW9B,OAAS,GAAGgB,QAAQf,OAAO,IAC7EiC,MAAO,IAAML,GAEjBA,EAAsC,IAApBA,EAAwB,EAAIA,EAAkB,EAEhEC,EAAWK,QAfXxB,GAAUpB,SAAS,IAAKX,EAAMM,wBAC9B4B,EAAY,CAACiB,cAAc,SAiB5B,GAAc,OAAVL,EAEP,GAAI,SAASvB,KAAKwB,GAAQ,CAgBtB,IAFA,IAAIS,EAAmB,GACnBC,GAAOhG,EAAE6D,MAAM,GACZmC,EAAMT,GACTQ,EAAmB,SAASvB,KAAKwB,GAAK,GAAKD,EAC3CC,EAAMC,KAAKC,MAAMF,EAAM,IAE3B,GAAIA,EAAM,EACN1B,GAAU,QAAU0B,EAAM,OAASD,MAChC,CACH,IAAIxB,EAAQ,gDAAgDC,KAAKxE,GACjEsE,GAAU,QAAUC,EAAM,GAAK,OAASA,EAAM,GAElDE,EAAY,CAACiB,cAAc,OAEpB,uBAAuB5B,KAAKwB,GAO/B,YAAYxB,KAAK9D,IACjBsE,GAAUpB,SAASlD,EAAGuC,EAAME,kBAC5BgC,EAAY,CAACiB,cAAc,IAEpB,KAAK3B,QAAQuB,IAAU,GAC9BhB,GAAU,MAAQtE,EAAI,OACtByE,EAAY,CAACiB,cAAc,KAG3BpB,GAAU,MAAQtE,EAAI,OACtByE,EAAY,CAACiB,cAAc,IAGlB,OAAN1F,EACPsE,GAAUpB,SAASlD,EAAGuC,EAAME,mBAI5B6B,GAAUf,mBAAmBvD,GAC7ByE,EAAY,CAACiB,cAAc,SAG5B,GAAIzD,EAAW6B,KAAK9D,GAAI,CAC3B,GAAIyE,EAAUiB,aAAc,CACxB,IAAIS,EAAW,4BAA4B3B,KAAKxE,GAE5CmG,KAAcA,EAAS,GAAK,OAAUA,EAAS,KAAOA,EAAS,GAAK,OACpE7B,GAAUpB,SAASlD,EAAGuC,EAAMO,mBAErBqD,GAAYA,EAAS,KAAQA,EAAS,IAAMA,EAAS,GAC5D7B,GAAUpB,SAASlD,EAAGuC,EAAMQ,mBAG5BuB,IAAWG,EAAUoB,MAAQ,aAAepB,EAAUoB,MAAQ,KAAO,OAAS7F,EAAI,YAGtFsE,GAAUpB,SAASlD,EAAGuC,EAAMS,gBAEhCyB,EAAY,CAACiB,cAAc,OAEd,MAAN1F,GAKHyE,EAAUvC,OAASA,EAAKC,MAASsC,EAAUvC,OAASA,EAAKI,aAAemD,EAAW9B,OACnFW,GAAUpB,SAASlD,EAAGuC,EAAMU,4BAG5BqB,GAAUmB,EAAW9B,OAASN,SAAS,IAAKmC,GAAmB,WAEnEf,EAAY,CACRiB,cAAc,EACdxD,KAAMA,EAAKI,aAGF,MAANtC,GAAmB,MAANA,GACpBsE,GAAU,MAAQtE,EAAI,OACtByE,EAAY,CAACiB,cAAc,IAEd,MAAN1F,GACPsE,GAAU,WACVG,EAAY,CAACiB,cAAc,KAG3BpB,GAAUf,mBAAmBvD,GAC7ByE,EAAY,CAACiB,cAAc,IAKnC,IAAuBU,EAAYxG,EAA/ByG,EAAgB,EACpB,IAAKzG,EAAI,EAAGA,EAAI6F,EAAW9B,OAAQ/D,IAC/BwG,EAAaX,EAAW7F,GAAGgG,MAAQS,EACnC/B,EACIA,EAAOT,MAAM,EAAGuC,GAChBlD,SAASuC,EAAW7F,GAAG+E,QAASpC,EAAMK,uBACtC0B,EAAOT,MAAMuC,EAAaX,EAAW7F,GAAG+E,QAAQhB,QAEpD0C,GAAiBnD,SAAS,GAAIX,EAAMK,uBAAuBe,OAG/D,OAAOW,GAeXzC,EAAKyE,YAAc,SAAUC,GAEzB,IAEIC,EAAI5G,EAFJ6G,EA/YR,SAAoBF,GAChB,GAAIG,SAASC,uBACT,OAAOD,SAASE,KAAKD,uBAAuBJ,GAEhD,IAII3G,EAJA6G,EAAMC,SAASE,KAAKC,qBAAqB,KACzCC,EAAQ,IAAIC,OAAO,YAAcR,EAAM,aACvCS,EAAS,GACTC,EAAMR,EAAI9C,OAEd,IAAK/D,EAAI,EAAGA,EAAIqH,EAAKrH,IACbkH,EAAMhD,KAAK2C,EAAI7G,GAAGsH,YAClBF,EAAOrB,KAAKc,EAAI7G,IAGxB,OAAOoH,EAiYGG,CADVZ,EAAMA,GAAO,SAETU,EAAMR,EAAI9C,OAEd,IAAK/D,EAAI,EAAGA,EAAIqH,EAAKrH,KACjB4G,EAAKC,EAAI7G,IACNwH,UAAYvF,EAAKsD,aAAaqB,EAAGa,aAAeb,EAAGc,YAY9DzF,EAAK0F,cAAgB,WACjB,IAAIC,EAAKd,SAASe,cAAc,SAC5BC,EACI,8jBAYRF,EAAGG,GAAK,qBAERjB,SAASG,qBAAqB,QAAQ,GAAGe,YAAYJ,GAEjDA,EAAGK,WACHL,EAAGK,WAAWC,QAAUJ,EAExBF,EAAGJ,UAAYM,GAIhB7F,EAngBW,GCLPkG","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"RegexColorize\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RegexColorize\"] = factory();\n\telse\n\t\troot[\"RegexColorize\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*! RegexColorizer v0.0.1\n * (c) 2010-2012 Steven Levithan <http://stevenlevithan.com/regex/colorizer/>\n * (c) 2019 Geon George <http://geongeorge.com/>\n * MIT license\n */\n\nvar RegexColorizer = (function () {\n    // \"use strict\";\n\n/*--------------------------------------\n *  Private variables\n *------------------------------------*/\n\n    var self = {},\n        regexToken = /\\[\\^?]?(?:[^\\\\\\]]+|\\\\[\\S\\s]?)*]?|\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\\S\\s]?)|\\((?:\\?[:=!]?)?|(?:[?*+]|\\{[0-9]+(?:,[0-9]*)?\\})\\??|[^.?*+^${[()|\\\\]+|./g,\n        charClassToken = /[^\\\\-]+|-|\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\\S\\s]?)/g,\n        charClassParts = /^(\\[\\^?)(]?(?:[^\\\\\\]]+|\\\\[\\S\\s]?)*)(]?)$/,\n        quantifier = /^(?:[?*+]|\\{[0-9]+(?:,[0-9]*)?\\})\\??$/,\n        type = {\n            NONE: 0,\n            RANGE_HYPHEN: 1,\n            SHORT_CLASS: 2,\n            ALTERNATOR: 3\n        },\n        error = {\n            UNCLOSED_CLASS: \"Unclosed character class\",\n            INCOMPLETE_TOKEN: \"Incomplete regex token\",\n            INVALID_RANGE: \"Reversed or invalid range\",\n            INVALID_GROUP_TYPE: \"Invalid or unsupported group type\",\n            UNBALANCED_LEFT_PAREN: \"Unclosed grouping\",\n            UNBALANCED_RIGHT_PAREN: \"No matching opening parenthesis\",\n            INTERVAL_OVERFLOW: \"Interval quantifier cannot use value over 65,535\",\n            INTERVAL_REVERSED: \"Interval quantifier range is reversed\",\n            UNQUANTIFIABLE: \"Quantifiers must be preceded by a token that can be repeated\",\n            IMPROPER_EMPTY_ALTERNATIVE: \"Empty alternative effectively truncates the regex here\"\n        };\n\n/*--------------------------------------\n *  Private helper functions\n *------------------------------------*/\n\n/**\n * Returns HTML for error highlighting.\n * @private\n * @param {String} str Pattern to apply error highlighting to.\n * @param {String} [desc] Error description.\n * @returns {String} HTML for error highlighting.\n */\n    function errorize(str, desc) {\n        return '<b class=\"err\"' + (desc ? ' title=\"' + desc + '\"' : '') + '>' + str + '</b>';\n    }\n\n/**\n * Returns HTML for group highlighting.\n * @private\n * @param {String} str Pattern to apply group highlighting to.\n * @param {Number} depth Group nesting depth.\n * @returns {String} HTML for group highlighting.\n */\n    function groupize(str, depth) {\n        return '<b class=\"g' + depth + '\">' + str + '</b>';\n    }\n\n/**\n * Expands &, <, and > characters in the provided string to HTML entities &amp;, &lt;, and &gt;.\n * @private\n * @param {String} str String with characters to expand.\n * @returns {String} String with characters expanded.\n */\n    function expandHtmlEntities(str) {\n        return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n\n/**\n * Returns a set of elements within the page body that have the given class name.\n * @private\n * @param {String} cls Class name.\n * @returns {NodeList|HTMLCollection|Array} Set of elements.\n */\n    function elsByClass(cls) {\n        if (document.getElementsByClassName) {\n            return document.body.getElementsByClassName(cls);\n        }\n        var els = document.body.getElementsByTagName(\"*\"),\n            regex = new RegExp(\"(?:^|\\\\s)\" + cls + \"(?:\\\\s|$)\"),\n            result = [],\n            len = els.length,\n            i;\n        for (i = 0; i < len; i++) {\n            if (regex.test(els[i].className)) {\n                result.push(els[i]);\n            }\n        }\n        return result;\n    }\n\n/**\n * Returns the character code for the provided regex token. Supports tokens used within character\n * classes only, since that's all it's currently needed for.\n * @private\n * @param {String} token Regex token.\n * @returns {Number} Character code of the provided token, or NaN.\n */\n    function getTokenCharCode(token) {\n        // Escape sequence\n        if (token.length > 1 && token.charAt(0) === \"\\\\\") {\n            var t = token.slice(1);\n            // Control character\n            if (/^c[A-Za-z]$/.test(t)) {\n                return \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".indexOf(t.charAt(1).toUpperCase()) + 1;\n            }\n            // Two or four digit hexadecimal character code\n            if (/^(?:x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})$/.test(t)) {\n                return parseInt(t.slice(1), 16);\n            }\n            // One to three digit octal character code up to 377 (0xFF)\n            if (/^(?:[0-3][0-7]{0,2}|[4-7][0-7]?)$/.test(t)) {\n                return parseInt(t, 8);\n            }\n            // Shorthand class or incomplete token\n            if (t.length === 1 && \"cuxDdSsWw\".indexOf(t) > -1) {\n                return NaN;\n            }\n            // Metacharacter representing a single character index, or escaped literal character\n            if (t.length === 1) {\n                switch (t) {\n                    case \"b\": return 8;  // Backspace\n                    case \"f\": return 12; // Form feed\n                    case \"n\": return 10; // Line feed\n                    case \"r\": return 13; // Carriage return\n                    case \"t\": return 9;  // Horizontal tab\n                    case \"v\": return 11; // Vertical tab\n                    default : return t.charCodeAt(0); // Escaped literal character\n                }\n            }\n        }\n        // Unescaped literal token(s)\n        if (token !== \"\\\\\") {\n            return token.charCodeAt(0);\n        }\n        return NaN;\n    }\n\n/**\n * Applies regex syntax highlighting to the provided character class. Character classes have their\n * own syntax rules which are different (sometimes quite subtly) from surrounding regex syntax.\n * Hence, they're treated as a single token and parsed separately.\n * @private\n * @param {String} value Character class pattern to be colorized.\n * @returns {String} HTML for displaying the character class with syntax highlighting.\n */\n    function parseCharClass(value) {\n        var output = \"\",\n            parts = charClassParts.exec(value),\n            lastToken = {\n                rangeable: false,\n                type: type.NONE\n            },\n            match, m;\n        parts = {\n            opening: parts[1],\n            content: parts[2],\n            closing: parts[3]\n        };\n\n        output += parts.closing ? parts.opening : errorize(parts.opening, error.UNCLOSED_CLASS);\n\n        // The charClassToken regex does most of the tokenization grunt work\n        while (match = charClassToken.exec(parts.content)) {\n            m = match[0];\n            // Escape\n            if (m.charAt(0) === \"\\\\\") {\n                /* Inside character classes, browsers differ on how they handle the following:\n                 * - Any representation of character index zero (\\0, \\00, \\000, \\x00, \\u0000).\n                 * - \"\\c\", when not followed by A-Z or a-z.\n                 * - \"\\x\", when not followed by two hex characters.\n                 * - \"\\u\", when not followed by four hex characters.\n                 * However, although representations of character index zero within character\n                 * classes don't work on their own in Firefox, they don't throw an error, they work\n                 * when used with ranges, and it's highly unlikely that the user will actually have\n                 * such a character in their test data, so such tokens are highlighted normally.\n                 * The remaining metasequences are flagged as errors.\n                 */\n                if (/^\\\\[cux]$/.test(m)) {\n                    output += errorize(m, error.INCOMPLETE_TOKEN);\n                    lastToken = {rangeable: lastToken.type !== type.RANGE_HYPHEN};\n                // Shorthand class (matches more than one character index)\n                } else if (/^\\\\[dsw]$/i.test(m)) {\n                    output += \"<b>\" + m + \"</b>\";\n                    /* Traditional regex behavior is that a shorthand class should be unrangeable.\n                     * Hence, [-\\dz], [\\d-z], and [z-\\d] should all be equivalent. However, at\n                     * least some browsers handle this inconsistently. E.g., Firefox 2 throws an\n                     * invalid range error for [z-\\d] and [\\d--].\n                     */\n                    lastToken = {\n                        rangeable: lastToken.type !== type.RANGE_HYPHEN,\n                        type: type.SHORT_CLASS\n                    };\n                // Unescaped \"\\\" at the end of the regex\n                } else if (m === \"\\\\\") {\n                    output += errorize(m, error.INCOMPLETE_TOKEN);\n                    // Don't need to set lastToken since this is the end of the line\n                // Metasequence representing a single character index, or escaped literal character\n                } else {\n                    output += \"<b>\" + expandHtmlEntities(m) + \"</b>\";\n                    lastToken = {\n                        rangeable: lastToken.type !== type.RANGE_HYPHEN,\n                        charCode: getTokenCharCode(m)\n                    };\n                }\n            // Hyphen (might indicate a range)\n            } else if (m === \"-\") {\n                if (lastToken.rangeable) {\n                    // Save the regex's lastIndex so we can reset it after checking the next token\n                    var lastIndex = charClassToken.lastIndex,\n                        nextToken = charClassToken.exec(parts.content);\n\n                    if (nextToken) {\n                        var nextTokenCharCode = getTokenCharCode(nextToken[0]);\n                        // Hypen for a reverse range (e.g., z-a) or shorthand class (e.g., \\d-x or x-\\S)\n                        if (\n                            (!isNaN(nextTokenCharCode) && lastToken.charCode > nextTokenCharCode) ||\n                            lastToken.type === type.SHORT_CLASS ||\n                            /^\\\\[dsw]$/i.test(nextToken[0])\n                        ) {\n                            output += errorize(\"-\", error.INVALID_RANGE);\n                        // Hyphen creating a valid range\n                        } else {\n                            output += \"<u>-</u>\";\n                        }\n                        lastToken = {\n                            rangeable: false,\n                            type: type.RANGE_HYPHEN\n                        };\n                    } else {\n                        // Hyphen at the end of a properly closed character class (literal character)\n                        if (parts.closing) {\n                            output += \"-\"; // Since this is a literal, it's technically \"rangeable\", but that doesn't matter\n                        // Hyphen at the end of an unclosed character class (i.e., the end of the regex)\n                        } else {\n                            output += \"<u>-</u>\";\n                        }\n                    }\n\n                    // Reset the regex's lastIndex so the next while loop iteration will continue appropriately\n                    charClassToken.lastIndex = lastIndex;\n                // Hyphen at the beginning of a character class or after a non-rangeable token\n                } else {\n                    output += \"-\";\n                    lastToken = {rangeable: lastToken.type !== type.RANGE_HYPHEN};\n                }\n            // Literal character sequence\n            } else {\n                output += expandHtmlEntities(m);\n                lastToken = {\n                    rangeable: (m.length > 1 || lastToken.type !== type.RANGE_HYPHEN),\n                    charCode: m.charCodeAt(m.length - 1)\n                };\n            }\n        } // End charClassToken loop\n\n        return output + parts.closing;\n    }\n\n/*--------------------------------------\n *  Public methods\n *------------------------------------*/\n\n/**\n * Applies regex syntax highlighting to the provided regex pattern string.\n * @memberOf RegexColorizer\n * @param {String} pattern Regex pattern to be colorized.\n * @returns {String} HTML for displaying the regex with syntax highlighting.\n * @example\n *\n * RegexColorizer.colorizeText('^regexp? pattern$');\n */\n    self.colorizeText = function (pattern) {\n        var output = \"\",\n            capturingGroupCount = 0,\n            groupStyleDepth = 0,\n            openGroups = [],\n            lastToken = {\n                quantifiable: false,\n                type: type.NONE\n            },\n            match, m, char0, char1;\n\n        while (match = regexToken.exec(pattern)) {\n            m = match[0];\n            char0 = m.charAt(0);\n            char1 = m.charAt(1);\n            // Character class\n            if (char0 === \"[\") {\n                output += \"<i>\" + parseCharClass(m) + \"</i>\";\n                lastToken = {quantifiable: true};\n            // Group opening\n            } else if (char0 === \"(\") {\n                // If this is an invalid group type, mark the error and don't count it towards\n                // group depth or total count\n                if (m.length === 2) { // m is \"(?\"\n                    output += errorize(m, error.INVALID_GROUP_TYPE);\n                } else {\n                    if (m.length === 1) {\n                        capturingGroupCount++;\n                    }\n                    groupStyleDepth = groupStyleDepth === 5 ? 1 : groupStyleDepth + 1;\n                    /* Record the group opening's position and character sequence so we can later\n                     * mark it as invalid if it turns out to be unclosed in the remainder of the\n                     * regex. The value of index is the position plus the length of the opening <b>\n                     * element with group-depth class.\n                     */\n                    openGroups.push({\n                        index: output.length + '<b class=\"gN\">'.length,\n                        opening: m\n                    });\n                    // Add markup to the group-opening character sequence\n                    output += groupize(m, groupStyleDepth);\n                }\n                lastToken = {quantifiable: false};\n            // Group closing\n            } else if (char0 === \")\") {\n                // If this is an invalid group closing\n                if (!openGroups.length) {\n                    output += errorize(\")\", error.UNBALANCED_RIGHT_PAREN);\n                    lastToken = {quantifiable: false};\n                } else {\n                    output += groupize(\")\", groupStyleDepth);\n                    /* Although at least in some browsers it is possible to quantify lookaheads,\n                     * this adds no value, doesn't work as you'd expect in JavaScript, and is an\n                     * error with some regex flavors such as PCRE (also ES5?), so flag them as\n                     * unquantifiable.\n                     */\n                    lastToken = {\n                        quantifiable: !/^[=!]/.test(openGroups[openGroups.length - 1].opening.charAt(2)),\n                        style: \"g\" + groupStyleDepth\n                    };\n                    groupStyleDepth = groupStyleDepth === 1 ? 5 : groupStyleDepth - 1;\n                    // Drop the last opening paren from depth tracking\n                    openGroups.pop();\n                }\n            // Escape or backreference\n            } else if (char0 === \"\\\\\") {\n                // Backreference or octal character code without a leading zero\n                if (/^[1-9]/.test(char1)) {\n                    /* What does \"\\10\" mean?\n                     * - Backref 10, if 10 or more capturing groups opened before this point.\n                     * - Backref 1 followed by \"0\", if 1-9 capturing groups opened before this point.\n                     * - Otherwise, it's octal character index 10 (since 10 is in octal range 0-377).\n                     * In the case of \\8 or \\9 when as many capturing groups weren't opened before\n                     * this point, they're highlighted as special tokens. However, they should\n                     * probably be marked as errors since the handling is browser-specific. E.g.,\n                     * in Firefox 2 they seem to be equivalent to \"(?!)\", while in IE 7 they match\n                     * the literal characters \"8\" and \"9\", which is correct handling. I don't mark\n                     * them as errors because it would seem inconsistent to users who don't\n                     * understand the highlighting rules for octals, etc. In fact, octals are not\n                     * included in ECMA-262v3, but all the big browsers support them.\n                     */\n                    var nonBackrefDigits = \"\",\n                        num = +m.slice(1);\n                    while (num > capturingGroupCount) {\n                        nonBackrefDigits = /[0-9]$/.exec(num)[0] + nonBackrefDigits;\n                        num = Math.floor(num / 10); // Drop the last digit\n                    }\n                    if (num > 0) {\n                        output += \"<b>\\\\\" + num + \"</b>\" + nonBackrefDigits;\n                    } else {\n                        var parts = /^\\\\([0-3][0-7]{0,2}|[4-7][0-7]?|[89])([0-9]*)/.exec(m);\n                        output += \"<b>\\\\\" + parts[1] + \"</b>\" + parts[2];\n                    }\n                    lastToken = {quantifiable: true};\n                // Metasequence\n                } else if (/^[0bBcdDfnrsStuvwWx]/.test(char1)) {\n                    /* Browsers differ on how they handle:\n                     * - \"\\c\", when not followed by A-Z or a-z.\n                     * - \"\\x\", when not followed by two hex characters.\n                     * - \"\\u\", when not followed by four hex characters.\n                     * Hence, such metasequences are flagged as errors.\n                     */\n                    if (/^\\\\[cux]$/.test(m)) {\n                        output += errorize(m, error.INCOMPLETE_TOKEN);\n                        lastToken = {quantifiable: false};\n                    // Unquantifiable metasequence\n                    } else if (\"bB\".indexOf(char1) > -1) {\n                        output += \"<b>\" + m + \"</b>\";\n                        lastToken = {quantifiable: false};\n                    // Quantifiable metasequence\n                    } else {\n                        output += \"<b>\" + m + \"</b>\";\n                        lastToken = {quantifiable: true};\n                    }\n                // Unescaped \"\\\" at the end of the regex\n                } else if (m === \"\\\\\") {\n                    output += errorize(m, error.INCOMPLETE_TOKEN);\n                    // Don't need to set lastToken since this is the end of the line\n                // Escaped literal character\n                } else {\n                    output += expandHtmlEntities(m);\n                    lastToken = {quantifiable: true};\n                }\n            // Quantifier\n            } else if (quantifier.test(m)) {\n                if (lastToken.quantifiable) {\n                    var interval = /^\\{([0-9]+)(?:,([0-9]*))?/.exec(m);\n                    // Interval quantifier out of range for Firefox\n                    if (interval && (+interval[1] > 65535 || (interval[2] && +interval[2] > 65535))) {\n                        output += errorize(m, error.INTERVAL_OVERFLOW);\n                    // Interval quantifier in reverse numeric order\n                    } else if (interval && interval[2] && (+interval[1] > +interval[2])) {\n                        output += errorize(m, error.INTERVAL_REVERSED);\n                    } else {\n                        // Quantifiers for groups are shown in the style of the (preceeding) group's depth\n                        output += (lastToken.style ? '<b class=\"' + lastToken.style + '\">' : '<b>') + m + '</b>';\n                    }\n                } else {\n                    output += errorize(m, error.UNQUANTIFIABLE);\n                }\n                lastToken = {quantifiable: false};\n            // Vertical bar (alternator)\n            } else if (m === \"|\") {\n                /* If there is a vertical bar at the very start of the regex, flag it as an error\n                 * since it effectively truncates the regex at that point. If two top-level\n                 * vertical bars are next to each other, flag it as an error for similar reasons.\n                 */\n                if (lastToken.type === type.NONE || (lastToken.type === type.ALTERNATOR && !openGroups.length)) {\n                    output += errorize(m, error.IMPROPER_EMPTY_ALTERNATIVE);\n                } else {\n                    // Alternators within groups are shown in the style of the containing group's depth\n                    output += openGroups.length ? groupize(\"|\", groupStyleDepth) : \"<b>|</b>\";\n                }\n                lastToken = {\n                    quantifiable: false,\n                    type: type.ALTERNATOR\n                };\n            // ^ or $ anchor\n            } else if (m === \"^\" || m === \"$\") {\n                output += \"<b>\" + m + \"</b>\";\n                lastToken = {quantifiable: false};\n            // Dot (.)\n            } else if (m === \".\") {\n                output += \"<b>.</b>\";\n                lastToken = {quantifiable: true};\n            // Literal character sequence\n            } else {\n                output += expandHtmlEntities(m);\n                lastToken = {quantifiable: true};\n            }\n        } // End regexToken loop\n\n        // Mark the opening character sequence for each unclosed grouping as invalid\n        var numCharsAdded = 0, errorIndex, i;\n        for (i = 0; i < openGroups.length; i++) {\n            errorIndex = openGroups[i].index + numCharsAdded;\n            output = (\n                output.slice(0, errorIndex) +\n                errorize(openGroups[i].opening, error.UNBALANCED_LEFT_PAREN) +\n                output.slice(errorIndex + openGroups[i].opening.length)\n            );\n            numCharsAdded += errorize(\"\", error.UNBALANCED_LEFT_PAREN).length;\n        }\n\n        return output;\n    };\n\n/**\n * Applies regex syntax highlighting to all elements on the page with the specified class.\n * @memberOf RegexColorizer\n * @param {String} [cls='regex'] Class name used by elements to be colorized.\n * @example\n *\n * // Basic use\n * RegexColorizer.colorizeAll();\n *\n * // With class name\n * RegexColorizer.colorizeAll('my-class');\n */\n    self.colorizeAll = function (cls) {\n        cls = cls || \"regex\";\n        var els = elsByClass(cls),\n            len = els.length,\n            el, i;\n        for (i = 0; i < len; i++) {\n            el = els[i];\n            el.innerHTML = self.colorizeText(el.textContent || el.innerText);\n        }\n    };\n\n/**\n * Adds a stylesheet with the default regex highlighting styles to the page. If you provide your\n * own stylesheet, you don't need to run this.\n * @memberOf RegexColorizer\n * @example\n *\n * RegexColorizer.addStyleSheet();\n */\n    self.addStyleSheet = function () {\n        var ss = document.createElement(\"style\"),\n            rules =\n                \".regex       {font-family: Monospace;} \" +\n                \".regex b     {background: #aad1f7;} \" + // metasequence\n                \".regex i     {background: #e3e3e3;} \" + // char class\n                \".regex i b   {background: #9fb6dc;} \" + // char class: metasequence\n                \".regex i u   {background: #c3c3c3;} \" + // char class: range-hyphen\n                \".regex b.g1  {background: #b4fa50; color: #000;} \" + // group: depth 1\n                \".regex b.g2  {background: #8cd400; color: #000;} \" + // group: depth 2\n                \".regex b.g3  {background: #26b809; color: #fff;} \" + // group: depth 3\n                \".regex b.g4  {background: #30ea60; color: #000;} \" + // group: depth 4\n                \".regex b.g5  {background: #0c8d15; color: #fff;} \" + // group: depth 5\n                \".regex b.err {background: #e30000; color: #fff;} \" + // error\n                \".regex b, .regex i, .regex u {font-weight: normal; font-style: normal; text-decoration: none;}\";\n        ss.id = \"regex-colorizer-ss\";\n        // Need to add to the DOM before setting cssText for IE < 9\n        document.getElementsByTagName(\"head\")[0].appendChild(ss);\n        // Can't use innerHTML or innerText for stylesheets in IE < 9\n        if (ss.styleSheet) {\n            ss.styleSheet.cssText = rules;\n        } else {\n            ss.innerHTML = rules;\n        }\n    };\n\n    return self;\n\n}());\n\nexport default RegexColorizer;","import RegexColorize from './regex';\nexport default RegexColorize;"],"sourceRoot":""}